install.packages("vosonSML")
# Getting YouTube Data
library(vosonSML)
# Getting YouTube Data
library(vosonSML)
# Getting YouTube Data
library(vosonSML)
# Getting YouTube Data
require(vosonSML)
library(magrittr)
library(vosonSML)
install.packages("magrittr")
warnings()
# Getting YouTube Data
library(magrittr)
force(C)
# Getting YouTube Data
install.packages("vosonSML", dependencies = TRUE)
#library(magrittr)
library(vosonSML)
.libPaths()
install.packages("vosonSML", dependencies = TRUE)
# Getting YouTube Data
#install.packages("vosonSML", dependencies = TRUE)
#library(magrittr)
library(vosonSML)
help(Rtools)
??Rtools
# Getting YouTube Data
install.packages("vosonSML", dependencies = TRUE)
# Getting YouTube Data
#install.packages("vosonSML", dependencies = TRUE)
#library(magrittr)
library(vosonSML)
libpath
.libPaths()
install.packages("installr")
library(installr)
updateR()
R
version
# Getting YouTube Data
#install.packages("vosonSML", dependencies = TRUE)
#library(magrittr)
library(vosonSML)
# Getting YouTube Data
install.packages("vosonSML", dependencies = TRUE)
#library(magrittr)
library(vosonSML)
# Getting YouTube Data
#install.packages("vosonSML", dependencies = TRUE)
library(magrittr)
#Collect Data using YouTube videos
videos <- c('3gJngOCyrZg')
ytdata <- CollectDataYoutube(videos, key, writeToFile = FALSE)
help("vosonSML")
ytdata <- Collect(videos, key, writeToFile = FALSE)
ytdata <- Collect(videos, key)
help("Collect")
videos <- c('3gJngOCyrZg')
ytdata <- Collect(videos, key)
(videos, key)
# Filename: RBTV_YTComment_Analysis
# Author: YBU
# Date: 16.12.2020
# Runtime: --
# Getting YouTube Data
#install.packages("vosonSML", dependencies = TRUE)
library(magrittr)
library(vosonSML)
# Google Developer Key
apikey <- "AIzaSyB6CH658uQulai9xvTNu5sf7hsQwlecO2s"
key <- Authenticate("youtube",apikey)
#Collect Data using YouTube videos
videos <- c("3gJngOCyrZg")
ytdata <- Collect(videos, key)
# Filename: RBTV_YTComment_Analysis
# Author: YBU
# Date: 16.12.2020
# Runtime: --
# Getting YouTube Data
#install.packages("vosonSML", dependencies = TRUE)
library(magrittr)
library(vosonSML)
# Google Developer Key
apikey <- "AIzaSyB6CH658uQulai9xvTNu5sf7hsQwlecO2s"
key <- Authenticate("youtube",apikey)
#Collect Data using YouTube videos
videos <- c("3gJngOCyrZg")
youtubeData <- youtubeAuth %>%
Collect(videoIDs = youtubeVideoIds,
maxComments = 100,
verbose = FALSE)
# Filename: RBTV_YTComment_Analysis
# Author: YBU
# Date: 16.12.2020
# Runtime: --
# Getting YouTube Data
#install.packages("vosonSML", dependencies = TRUE)
library(magrittr)
library(vosonSML)
# Google Developer Key
apikey <- "AIzaSyB6CH658uQulai9xvTNu5sf7hsQwlecO2s"
key <- Authenticate("youtube",apikey)
#Collect Data using YouTube videos
videos <- c("3gJngOCyrZg")
youtubeData <- youtubeAuth %>%
Collect(videoIDs = videos,
maxComments = 100,
verbose = FALSE)
# Filename: RBTV_YTComment_Analysis
# Author: YBU
# Date: 16.12.2020
# Runtime: --
# Getting YouTube Data
#install.packages("vosonSML", dependencies = TRUE)
library(magrittr)
library(vosonSML)
# Google Developer Key
apikey <- "AIzaSyB6CH658uQulai9xvTNu5sf7hsQwlecO2s"
youtubeAuth <- Authenticate("youtube",apikey)
#Collect Data using YouTube videos
videos <- c("3gJngOCyrZg")
youtubeData <- youtubeAuth %>%
Collect(videoIDs = videos,
maxComments = 100,
verbose = FALSE)
# Filename: RBTV_YTComment_Analysis
# Author: YBU
# Date: 16.12.2020
# Runtime: --
# Getting YouTube Data
#install.packages("vosonSML", dependencies = TRUE)
library(magrittr)
library(vosonSML)
# Google Developer Key
apikey <- "AIzaSyB6CH658uQulai9xvTNu5sf7hsQwlecO2s"
key <- Authenticate("youtube",apikey)
#Collect Data using YouTube videos
youtubeVideoIds <- c("3gJngOCyrZg")
youtubeData <- key %>%
Collect(videoIDs = youtubeVideoIds,
maxComments = 100,
verbose = FALSE)
write.csv(ytData, file = "C:\Users\Yannic\Desktop\snippet.csv", row.names = FALSE)
write.csv(ytData, file = "C:/Users/Yannic/Desktop/snippet.csv", row.names = FALSE)
# Filename: RBTV_YTComment_Analysis
# Author: YBU
# Date: 16.12.2020
# Runtime: --
# Getting YouTube Data
#install.packages("vosonSML", dependencies = TRUE)
library(magrittr)
library(vosonSML)
# Google Developer Key
apikey <- "AIzaSyB6CH658uQulai9xvTNu5sf7hsQwlecO2s"
key <- Authenticate("youtube",apikey)
#Collect Data using YouTube videos
ytVideos <- c()
ytVideoIds <- GetYoutubeVideoIDs(ytVideos)
ytData <- key %>%
Collect(videoIDs = youtubeVideoIds,
maxComments = 100,
verbose = FALSE)
write.csv(ytData, file = "C:/Users/Yannic/Desktop/snippet.csv", row.names = FALSE)
write.csv2(ytData, file = "C:/Users/Yannic/Desktop/snippet.csv", sep = ";", row.names = FALSE)
write.csv2(ytData, file = "C:/Users/Yannic/Desktop/snippet.csv", append = FALSE, sep = ";", row.names = FALSE)
write.csv2(ytData, file = "C:/Users/Yannic/Desktop/snippet.csv", append = FALSE, sep = ";", row.names = FALSE)
write.csv2(ytData, file = "C:/Users/Yannic/Desktop/snippet.csv", sep = ";", row.names = FALSE)
write.csv2(ytData, file = "C:/Users/Yannic/Desktop/snippet.csv", append = FALSE, sep = ";", row.names = FALSE)
write.csv2(ytData, file = "C:/Users/Yannic/Desktop/snippet.csv", append = FALSE, sep = ";", row.names = FALSE)
ytData <- Collect(
keyvideoIDs = youtubeVideoIds,
maxComments = 100,
verbose = FALSE)
write.csv2(
ytData,
file = "C:/Users/Yannic/Desktop/" & filenamecsv & ".csv",
append = FALSE,
sep = ";",
row.names = FALSE)
# Save the comment data as csv
filenamecsv <- "snippet2"
write.csv2(
ytData,
file = "C:/Users/Yannic/Desktop/" & filenamecsv & ".csv",
append = FALSE,
sep = ";",
row.names = FALSE)
write.csv2(
ytData,
file = paste("C:/Users/Yannic/Desktop/", filenamecsv, ".csv"),
append = FALSE,
sep = ";",
row.names = FALSE)
filenamecsv <- "snippet2"
pathcsv <- paste("C:/Users/Yannic/Desktop/", filenamecsv, ".csv")
delimitercsv <- ";"
write.csv2(
ytData
, file = pathcsv
, append = FALSE
, sep = delimitercsv
, row.names = FALSE
)
# Read the comment data
data <- read.csv(
pathcsv
, sep = delimitercsv
, header = TRUE
)
str(data)
View(data)
View(data)
View(ytData)
View(ytData)
help(youtube.videos.list)
help(youtube.videos.list())
help(list)
# Get channel ID
youtube.videos.list(ytVideoIds)
# Get channel ID
youtube.video.list(ytVideoIds)
channelData <- youtube.channels.list(channelID, part=contentDetails)
help(youtube=)
help(youtube)
??youtube
help(get)
require(curl)
require(jsonlite)
library(kableExtra)
library(dplyr)
library(ggplot2)
library(plotly)
library(reshape2)
API_key= "AIzaSyB6CH658uQulai9xvTNu5sf7hsQwlecO2s"
videoID= "3gJngOCyrZg"
getstats_video<-function(video_id,API_key){
url=paste0("https://www.googleapis.com/youtube/v3/videos?part=snippet,statistics&id=",video_id,"&key=",API_key)
result <- fromJSON(txt=url)
salida=list()
return(data.frame(name=result$items$snippet$channelTitle, result$items$statistics,title=result$items$snippet$title,date=result$items$snippet$publishedAt,descrip=result$items$snippet$description))
}
get_playlist_canal<-function(id,API_key,topn=15){
url=paste0('https://www.googleapis.com/youtube/v3/playlistItems?part=contentDetails&playlistId=',id,'&key=',API_key,'&maxResults=',topn)
result=fromJSON(txt=url)
return(data.frame(result$items$contentDetails))
}
getstats_canal<-function(id,API_key){
url=paste0('https://www.googleapis.com/youtube/v3/channels?part=snippet%2CcontentDetails%2Cstatistics&id=',id,'&key=',API_key)
result <- fromJSON(txt=url)
return(data.frame(name=result$items$snippet$title,result$items$statistics,pl_list_id=result$items$contentDetails$relatedPlaylists))
}
getall_channels<-function(ids,API_key,topn=5){
videos=lapply(ids,FUN=get_playlist_canal,API_key=API_key,topn=topn) %>% bind_rows()
stats=lapply(videos[,1],FUN=getstats_video,API_key=API_key)
stats=bind_rows(stats)
stats$vid_id=videos[,1]
return(stats)
}
require(curl)
require(jsonlite)
library(kableExtra)
API_key= "AIzaSyB6CH658uQulai9xvTNu5sf7hsQwlecO2s"
videoID= "3gJngOCyrZg"
getstats_video<-function(video_id,API_key){
url=paste0("https://www.googleapis.com/youtube/v3/videos?part=snippet,statistics&id=",video_id,"&key=",API_key)
result <- fromJSON(txt=url)
salida=list()
return(data.frame(name=result$items$snippet$channelTitle, result$items$statistics,title=result$items$snippet$title,date=result$items$snippet$publishedAt,descrip=result$items$snippet$description))
}
View(getstats_video)
data2 = getstats_video(videoID, API_key)
View(data2)
# Google Developer Key / YouTube V3 API
APIpath <- "C:\Users\Yannic\OneDrive\Documents\11_Fortbildung\RBTV_YTComment_Analysis\RBTV_YTComment_Analysis\API_KEY_YouTubeV3.txt"
# Google Developer Key / YouTube V3 API
APIpath <- "C:/Users/Yannic/OneDrive/Documents/11_Fortbildung/RBTV_YTComment_Analysis/RBTV_YTComment_Analysis/API_KEY_YouTubeV3.txt"
APIstring <- read.csv(APIpath)
View(APIstring)
APIstring <- read.table(APIpath, header = FALSE)
View(APIstring)
print(APIstring)
APIstring <- read.delim(APIpath, header = FALSE)
APIstring <- read.delim(APIpath) #, header = FALSE)
View(APIstring)
View(APIstring)
print(APIstring)
APIstring <- read.table(APIpath, header = FALSE)
print(APIstring)
print(APIstring(1,1))
print(APIstring[1,1])
APIpath <- "C:/Users/Yannic/OneDrive/Documents/11_Fortbildung/RBTV_YTComment_Analysis/RBTV_YTComment_Analysis/API_KEY_YouTubeV3.txt"
APItable <- read.table(APIpath, header = FALSE)
APIkey <- APItable[1,1]
print(APIkey)
View(key)
View(APItable)
View(APItable)
View(APIstring)
View(APIstring)
library(magrittr)
library(vosonSML)
# Google Developer Key / YouTube V3 API
sAPIpath    <- "C:/Users/Yannic/OneDrive/Documents/11_Fortbildung/RBTV_YTComment_Analysis/RBTV_YTComment_Analysis/API_KEY_YouTubeV3.txt"
arrAPItable <- read.table(APIpath, header = FALSE)
sAPIkey     <- APItable[1,1]
#print(APIkey)  # Debugging
arrKey      <- Authenticate("youtube",sAPIkey)
# Google Developer Key / YouTube V3 API
sAPIpath    <- "C:/Users/Yannic/OneDrive/Documents/11_Fortbildung/RBTV_YTComment_Analysis/RBTV_YTComment_Analysis/API_KEY_YouTubeV3.txt"
arrAPItable <- read.table(sAPIpath, header = FALSE)
sAPIkey     <- arrAPItable[1,1]
#print(APIkey)  # Debugging
arrKey      <- Authenticate("youtube",sAPIkey)
View(arrKey)
View(arrAPItable)
